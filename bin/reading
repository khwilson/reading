#!/usr/bin/env python

import os
import posixpath

import click
import requests
from sqlalchemy import create_engine
import yaml

from reading import config as cfg
from reading.models import Base


@click.group()
@click.option('--debug/--no-debug', default=False, help="Whether to run Flask in debug mode")
@click.option('-c', '--config', default=None, nargs=1, type=str, help="Path to config file")
@click.pass_context
def cli(ctx, debug, config):
    if config:
        with open(config, 'r') as configfile:
            cfg.set_config_from_dict(yaml.load(configfile))
    else:
        cfg.set_config_from_env()
    ctx.obj = {'DEBUG': debug}


@cli.command()
@click.pass_context
def create_tables(ctx):
    """ Drop and create database """
    config = cfg.get_config().database
    if config.scheme.lower() == 'sqlite':
        engine = create_engine('sqlite:///' + config.host)
        Base.metadata.drop_all(engine)
        Base.metadata.create_all(engine)
    else:
        raise ValueError("Currently only sqlite is supported")


@cli.command()
@click.pass_context
def serve(ctx):
    """ Start the webserver """
    from reading import web
    web.app.run(debug=ctx.obj['DEBUG'])


if __name__ == '__main__':
    cli()
